{"version":3,"sources":["CommonVar.js","components/Spinner.js","contexts/UserContext.js","routes/ProtectedRoute.js","routes/Home.js","components/Modal.js","logo/google.webp","routes/Login.js","routes/Register.js","components/reports/Create.js","components/reports/List.js","components/SearchForm.js","routes/Reports.js","components/users/List.js","routes/Users.js","routes/Statistic.js","components/LogoutButton.js","components/SideBar.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","Spinner","className","UserContext","createContext","UserProvider","props","useState","isLogin","setIsLogin","userInfo","setUserInfo","isFetching","setIsFetching","useEffect","a","fetch","credentials","res","status","json","resData","Provider","value","children","ProtectedRoute","Component","component","rest","useContext","render","location","to","pathname","state","from","Home","Modal","content","isActive","setModel","onClick","Login","history","email","setEmail","password","setPassword","modalState","setModal","isLoading","setIsLoading","loginHandler","data","method","headers","body","JSON","stringify","text","push","NotificationManager","success","htmlFor","type","name","id","onChange","event","target","class","window","open","src","logo","alt","Register","setName","registerHandler","Create","getReports","birthday","setBirthday","sex","setSex","openForm","setOpenForm","console","log","defaultValue","toLowerCase","then","List","currPage","reports","deleteReport","setCurrPage","limitPerPage","setLimit","countPages","formatDate","Date","toLocaleDateString","split","join","map","item","index","key","_id","style","date","e","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","selected","containerClassName","SearchForm","listField","setSearch","list","dic","field","setField","keyword","setKeyword","preventDefault","Report","setReports","search","defaultPrevented","users","deleteUser","width","Users","setUsers","isAdmin","Statistic","setData","year","setYear","isFocus","setFocus","listYear","result","labels","datasets","label","borderColor","options","maintainAspectRatio","LogoutButton","SideBar","activeSideBar","setActiveSideBar","activeClassName","NavBar","App","exact","path","Reports","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e75d1893.chunk.js","sourcesContent":["export const API_URL = \"https://api-project1-quocanh.herokuapp.com\";","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n\t\t\t<div className=\"circle\">\r\n\t\t\t\t<div className=\"circle-1\"></div>\r\n\t\t\t\t<div className=\"circle-2\"></div>\r\n\t\t\t\t<div className=\"circle-3\"></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { useState, createContext, useEffect } from 'react';\r\nimport { API_URL } from '../CommonVar';\r\nimport Spinner from '../components/Spinner';\r\n\r\nexport const UserContext = createContext();\r\nexport const UserProvider = (props) => {\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [userInfo, setUserInfo] = useState({});   \r\n    const [isFetching, setIsFetching] = useState(true); \r\n    useEffect(() => {        \r\n        (async () => { \r\n            setIsFetching(true);           \r\n            const res = await fetch(`${API_URL}/api/user/info`, {\r\n                credentials: 'include'\r\n            });\r\n            if (res.status === 200) {\r\n                setIsLogin(true);\r\n                const resData = await res.json();\r\n                setUserInfo(resData);\r\n            }\r\n            setIsFetching(false);\r\n        })();\r\n    }, [isLogin])\r\n        \r\n    return (\r\n        <UserContext.Provider value={{ isLogin, setIsLogin, userInfo }}>\r\n            {isFetching ? <Spinner /> : props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { UserContext } from '../contexts/UserContext';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    const { isLogin } = useContext(UserContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) => \r\n                isLogin ? (\r\n                    <Component />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n        }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {   \r\n    return (\r\n        <div className=\"Home\">\r\n           \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ content, isActive, setModel }) => {\r\n    const closeHandler = () => {\r\n        setModel({isActive: false});\r\n    }\r\n    return (\r\n        <div className={isActive?'Modal Modal-active':'Modal'}>\r\n            <div className=\"container\">\r\n                <div className=\"content\">{content}</div>\r\n                <div className=\"close-btn\" onClick={closeHandler}>X</div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","export default __webpack_public_path__ + \"static/media/google.84ce1697.webp\";","import React, {useState, useContext} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { API_URL } from '../CommonVar';\r\nimport './Login.css';\r\nimport Modal from '../components/Modal';\r\nimport Spinner from '../components/Spinner';\r\nimport logo from '../logo/google.webp'\r\n\r\nconst Login = ({history, location}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [modalState, setModal] = useState({ isActive:false });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { isLogin, setIsLogin } = useContext(UserContext);\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const updateEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n    const updatePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    };\r\n    const googleLogin = () => {\r\n        window.open(`${API_URL}/api/auth/google/`, '_self');\r\n    }\r\n    const facebookLogin = () => {\r\n        window.open(`${API_URL}/api/auth/facebook/`, '_self');\r\n    }\r\n    const loginHandler = async () => {  \r\n        setIsLoading(true);      \r\n        const data = { email, password };\r\n        const res = await fetch(`${API_URL}/api/auth/login`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            credentials: 'include',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        })\r\n        const resData = await res.text();\r\n        setIsLoading(false);\r\n        if (res.status === 200) {\r\n            setIsLogin(!isLogin);\r\n            history.push(from);\r\n            NotificationManager.success('Đăng nhập thành công!', 'Successful!');\r\n            return;\r\n        }\r\n        setModal({ isActive:true, content: resData });\r\n    };\r\n    return isLogin?\r\n    (\r\n        <Redirect to=\"/\" />\r\n    )\r\n    :(\r\n        <div className=\"login-form\">\r\n            <h2>Đăng Nhập</h2>\r\n            <form>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={updateEmail} value={email}/>\r\n                <label htmlFor=\"password\">Mật khẩu</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={updatePassword} value={password}/>\r\n                <div id=\"submit-btn\" onClick={loginHandler}>ĐĂNG NHẬP</div>\r\n                <h1>HOẶC</h1>\r\n                <div class=\"other-login\">\r\n                    <div class=\"google-btn btn\" onClick={googleLogin}>\r\n                        <div className=\"logo\">\r\n                            <img src={logo} alt=\"google-login\" />\r\n                        </div>\r\n                        <div>Google</div>\r\n                    </div>\r\n                    <div class=\"facebook-btn btn\" onClick={facebookLogin}>\r\n                        <span className=\"material-icons icon\">facebook</span>\r\n                        <div>Facebook</div>\r\n                    </div>\r\n                </div>\r\n                <p>Chưa có tài khoản? <Link to=\"/register\">Đăng ký</Link></p>\r\n            </form>\r\n            <Modal {...modalState} setModel={setModal} />\r\n            {isLoading && <Spinner/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport './Register.css';\r\nimport Modal from '../components/Modal';\r\nimport Spinner from '../components/Spinner';\r\nimport { API_URL } from '../CommonVar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Register = ({ history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [modalState, setModal] = useState({ isActive:false });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const updateName = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n    const updateEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n    const updatePassword = (event) => {\r\n        setPassword(event.target.value);\r\n    };\r\n    const registerHandler = async () => {    \r\n        setIsLoading(true);    \r\n        const data = { name, email, password};\r\n        const res = await fetch(`${API_URL}/api/user/register`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        })\r\n        const resData = await res.text();\r\n        setIsLoading(false);\r\n        if (res.status === 200) {            \r\n            history.push('/login');\r\n            NotificationManager.success('Đăng ký thành công!', 'Successful!');\r\n            return;\r\n        }\r\n        setModal({ isActive:true, content: resData });\r\n    };    \r\n\r\n    return (\r\n        <div className=\"Register\">\r\n            <h2>Đăng ký</h2>\r\n            <form>\r\n                <label htmlFor=\"name\">Tên</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" onChange={updateName} value={name}/>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" onChange={updateEmail} value={email}/>\r\n                <label htmlFor=\"password\">Mật khẩu</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={updatePassword} value={password}/>\r\n                <div id=\"submit-btn\" onClick={registerHandler}>Đăng Ký</div>\r\n                <p>Quay lại trang <Link to=\"/login\">đăng nhập</Link></p>\r\n            </form>\r\n            <Modal {...modalState} setModel={setModal} />\r\n            {isLoading && <Spinner/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { useState } from 'react';\r\nimport { API_URL } from '../../CommonVar';\r\nimport './Create.css';\r\n\r\nconst Create = (props) => {\r\n    const { getReports } = props;\r\n    const [name, setName] = useState('');\r\n    const [birthday, setBirthday] = useState(null);\r\n    const [sex, setSex] = useState('nam');\r\n    const [openForm, setOpenForm] = useState(false);\r\n\r\n    const updateName = (event) => {\r\n        setName(event.target.value);\r\n    }\r\n    const updateBirthday = (event) => {\r\n        setBirthday(event.target.value);\r\n    }\r\n    const updateSex = (event) => {\r\n        setSex(event.target.value);\r\n    }\r\n    const submit = (event) => {\r\n        event.defaultValue = true;\r\n        const data = { name: name.toLowerCase(), sex, birthday };\r\n        fetch(`${API_URL}/api/report/`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            credentials: 'include',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then((res) => {\r\n                getReports();\r\n                setOpenForm(false);\r\n                setName('');\r\n                setBirthday(null);\r\n                setSex('nam');\r\n            });\r\n    }\r\n    console.log('render')\r\n    return (\r\n        <div className=\"CreateReport\">\r\n            <div className=\"create-btn\" onClick={() => setOpenForm(true)}>+ Tạo Mới</div>\r\n            <div className={openForm?\"Create-Form Create-Form-Active\":\"Create-Form\"}>\r\n                <div className=\"container\">\r\n                    <span className=\"close-btn\" onClick={() => setOpenForm(false)}>X</span>\r\n                    <label htmlFor=\"name\">Họ tên</label>\r\n                    <input type=\"text\" name=\"name\" id=\"name\" onChange={updateName} />\r\n                    <label htmlFor=\"birthday\">Ngày sinh</label>\r\n                    <input type=\"date\" name=\"birthday\" id=\"birthday\" onChange={updateBirthday} />\r\n                    <label htmlFor=\"sex\">Giới tính</label>\r\n                    <select id=\"sex\" name=\"sex\" defaultValue={sex} onChange={updateSex}>\r\n                        <option value=\"nam\">Nam</option>\r\n                        <option value=\"nữ\">Nữ</option>\r\n                    </select>\r\n                    <button onClick={submit}>Tạo báo cáo</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { API_URL } from '../../CommonVar';\r\nimport '../ReactPagination.css';\r\nimport '../List.css'\r\n\r\nconst List = (props) => {\r\n    const { currPage, reports, deleteReport, setCurrPage, limitPerPage, setLimit } = props; \r\n    const { data, countPages } = reports;\r\n    const onPageChangeHandle = ({selected}) => {\r\n        setCurrPage(selected);\r\n    };\r\n    const openReport = (id) => {\r\n        window.open(`${API_URL}/api/report/${id}`)\r\n    }\r\n    const updateLimit = (event) =>{\r\n        setLimit(event.target.value);\r\n        setCurrPage(0);\r\n    };\r\n    const formatDate = (birthday) => {\r\n        birthday = new Date(birthday);\r\n        birthday = birthday.toLocaleDateString();\r\n        return birthday.split('/').join('-');\r\n    };\r\n\r\n    return (\r\n        <div className=\"List\">\r\n            <select id=\"limit\" value={limitPerPage} onChange={updateLimit}>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value=\"30\">30</option>\r\n            </select>\r\n            <div className=\"table-container\">\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        <th>Họ tên</th>\r\n                        <th>Giới tính</th>\r\n                        <th>Ngày sinh</th>\r\n                        <th>Ngày tạo</th>\r\n                        <th>Hành động</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((item, index) => (\r\n                            <tr key={item._id}>\r\n                                <td>{index + currPage*limitPerPage}</td>\r\n                                <td style={{'textTransform': 'capitalize'}}>{item.name}</td>\r\n                                <td style={{'textTransform': 'capitalize'}}>{item.sex}</td>\r\n                                <td>{formatDate(item.birthday)}</td>\r\n                                <td>{formatDate(item.date)}</td>\r\n                                <td>\r\n                                    <span class=\"material-icons-outlined icon\" onClick={() => openReport(item._id)}>\r\n                                        visibility\r\n                                    </span>\r\n                                    <span className=\"material-icons icon\" onClick={(e) => deleteReport(e, item._id)}>\r\n                                        delete_outline\r\n                                    </span>                                    \r\n                                </td>\r\n                            </tr>\r\n                        ))} \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n            <ReactPaginate pageCount={countPages} pageRangeDisplayed={3} marginPagesDisplayed={2} onPageChange={onPageChangeHandle} containerClassName=\"pagination\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React, { useState } from 'react';\r\nimport './SearchForm.css';\r\n\r\nconst SearchForm = ({ listField, setSearch,setCurrPage }) => {\r\n    const { list, dic } = listField;\r\n    const [field, setField] = useState('name');\r\n    const [keyword, setKeyword] = useState('');\r\n    const updateField = (event) =>{\r\n        setField(event.target.value);\r\n        setKeyword('');\r\n    };\r\n    const updateKeyword = (event) =>{\r\n        setKeyword(event.target.value);\r\n    };\r\n    const handelClick = (event) => {\r\n        event.preventDefault();\r\n        setSearch({ field, keyword: keyword.toLowerCase() });\r\n        setCurrPage(0);\r\n    }\r\n    return (\r\n        <div className=\"SearchForm\">\r\n            <select id=\"field\" value={field}  onChange={updateField}>\r\n                {list.map((item, index) => (<option key={index} value={dic[index]}>{item}</option>))}\r\n            </select>\r\n            <input id=\"keyword\" type={(field === 'birthday') ? 'date' : 'text' } onChange={updateKeyword} value={keyword} />            \r\n            <button onClick={handelClick}>\r\n                <span className=\"material-icons icon\">\r\n                    search\r\n                </span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React, { useState, useEffect } from 'react';\r\nimport Create from '../components/reports/Create'\r\nimport List from '../components/reports/List';\r\nimport { API_URL } from '../CommonVar';\r\nimport SearchForm from '../components/SearchForm';\r\nimport './Reports.css';\r\n\r\nconst Report = () => {\r\n    const [reports, setReports] = useState({data: [], countPages: 0});\r\n    const [currPage, setCurrPage] = useState(0);\r\n    const [search, setSearch] = useState({ field: '', keyword: '' });\r\n    const [limitPerPage, setLimit] = useState(5);\r\n\r\n    const listField = {\r\n        list: ['Họ tên', 'Giới tính', 'Ngày sinh'],\r\n        dic: ['name', 'sex', 'birthday']\r\n    };\r\n\r\n    const getReports = () => {\r\n        fetch(`${API_URL}/api/report?page=${currPage}&field=${search.field}&keyword=${search.keyword}&limit=${limitPerPage}`, {\r\n            credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setReports(data);\r\n        });\r\n        \r\n    };\r\n    const deleteReport = (e, id) => {\r\n        e.defaultPrevented = true;\r\n        const data = { _id: id };\r\n        fetch(`${API_URL}/api/report/`, {\r\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.,\r\n            credentials: 'include',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => getReports());\r\n    }\r\n    useEffect(() => {\r\n        fetch(`${API_URL}/api/report?page=${currPage}&field=${search.field}&keyword=${search.keyword}&limit=${limitPerPage}`, {\r\n            credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setReports(data);\r\n        });\r\n    }, [search, currPage, limitPerPage]);\r\n    console.log('render')\r\n    return (\r\n        <div className=\"Report\">\r\n            <Create getReports={getReports} />\r\n            <SearchForm listField={listField} setSearch={setSearch} setCurrPage={setCurrPage} />\r\n            <List reports={reports} currPage={currPage} deleteReport={deleteReport} setCurrPage={setCurrPage} limitPerPage={limitPerPage} setLimit={setLimit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report;","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport '../ReactPagination.css';\r\nimport '../List.css'\r\n\r\nconst List = (props) => {\r\n    const { currPage, users, deleteUser, setCurrPage, limitPerPage, setLimit } = props;   \r\n    const { data, countPages } = users;\r\n    const onPageChangeHandle = ({selected}) => {\r\n        setCurrPage(selected);\r\n    }\r\n    const updateLimit = (event) =>{\r\n        setLimit(event.target.value);\r\n        setCurrPage(0);\r\n    };\r\n    const formatDate = (birthday) => {\r\n        birthday = new Date(birthday);\r\n        birthday = birthday.toLocaleDateString();\r\n        return birthday.split('/').join('-');\r\n    }\r\n    return (\r\n        <div className=\"List\">\r\n            <label htmlFor=\"limit\">Số dòng </label>\r\n            <select id=\"limit\" value={limitPerPage} onChange={updateLimit}>\r\n                <option value=\"5\">5</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"20\">20</option>\r\n                <option value=\"30\">30</option>\r\n            </select>\r\n            <div className=\"table-container\">\r\n                <table>\r\n                    <colgroup>\r\n                        <col style={{width: '10%'}} />\r\n                        <col style={{width: '30%'}} />\r\n                        <col style={{width: '30%'}} />\r\n                        <col style={{width: '20%'}} />\r\n                        <col style={{width: '10%'}} />\r\n                        </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>STT</th>\r\n                            <th>Họ tên</th>\r\n                            <th>Email</th>\r\n                            <th>Ngày tạo</th>\r\n                            <th>Hành động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((item, index) => (\r\n                            <tr key={item._id}>\r\n                                <td>{index + currPage*limitPerPage}</td>\r\n                                <td>{item.name}</td>\r\n                                <td>{item.email}</td>\r\n                                <td>{formatDate(item.date)}</td>\r\n                                <td>\r\n                                    <span className=\"material-icons icon\" onClick={(e) => deleteUser(e, item._id)}>\r\n                                        delete_outline\r\n                                    </span>\r\n                                </td>\r\n                       \r\n                            </tr>\r\n                        ))} \r\n                    </tbody>\r\n                </table>\r\n            </div>            \r\n            <ReactPaginate pageCount={countPages} pageRangeDisplayed={3} marginPagesDisplayed={2} onPageChange={onPageChangeHandle} containerClassName=\"pagination\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React, { useState, useEffect, useContext } from 'react';\r\nimport List from '../components/users/List';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { API_URL } from '../CommonVar';\r\n\r\nconst Users = () => {\r\n    const { userInfo } = useContext(UserContext);\r\n    const [users, setUsers] = useState({data: [], countPages: 0});\r\n    const [currPage, setCurrPage] = useState(0);\r\n    const [limitPerPage, setLimit] = useState(5);\r\n\r\n    const getUsers = () => {\r\n        fetch(`${API_URL}/api/user/list?page=${currPage}&limit=${limitPerPage}`, {\r\n            credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUsers(data);\r\n        });\r\n    };\r\n    const deleteUser = (e, id) => {\r\n        e.defaultPrevented = true;\r\n        const data = { _id: id };\r\n        fetch(`${API_URL}/api/user/delete`, {\r\n            method: 'DELETE', // *GET, POST, PUT, DELETE, etc.,\r\n            credentials: 'include',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => getUsers());\r\n    };\r\n    useEffect(() => {\r\n        fetch(`${API_URL}/api/user/list?page=${currPage}&limit=${limitPerPage}`, {\r\n            credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUsers(data);\r\n        });        \r\n    }, [currPage, limitPerPage]);\r\n    return (\r\n        <div className=\"Users\">\r\n            {userInfo.isAdmin ? (<List users={users} currPage={currPage} deleteUser={deleteUser} setCurrPage={setCurrPage} limitPerPage={limitPerPage} setLimit={setLimit} />) : (<Redirect to={{pathname: '/'}} />)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { API_URL } from '../CommonVar';\r\nimport './Statistic.css';\r\n\r\nconst Statistic = () => {\r\n    const [data, setData] = useState({});\r\n    const [year, setYear] = useState(2020);\r\n    const [isFocus, setFocus] = useState(false);\r\n\r\n    let listYear = [];\r\n    for (let key in data) {\r\n        listYear.push(key);\r\n    }\r\n\r\n    const handleOnClick = () => {       \r\n        setFocus(!isFocus);\r\n    }\r\n    useEffect(() => {\r\n        fetch(`${API_URL}/api/report/statistic`, {\r\n            credentials: 'include'\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            setData(result);\r\n        });\r\n    }, [year]);\r\n\r\n    return(\r\n        <div className=\"Statistic\">\r\n            <div className=\"chart-container\">                \r\n                <Line \r\n                    data={{\r\n                        labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],\r\n                        datasets: [{\r\n                            label: 'Tổng số báo cáo',\r\n                            borderColor: 'rgb(255, 99, 132)',\r\n                            data: data[year]\r\n                        }]                        \r\n                    }}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"select-year\" onClick={handleOnClick}>\r\n                <span>{year}</span>\r\n                <span className={isFocus?'material-icons icon focus':'material-icons icon'}>keyboard_arrow_down</span>\r\n                <ul className={isFocus?'focus':''}>\r\n                    {\r\n                        listYear.map((item) => <li key={item} onClick={() => setYear(item)}>{item}</li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Statistic;","import React, { useContext } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport { API_URL } from '../CommonVar';\r\n\r\nconst LogoutButton = ({ className }) => {\r\n    const { setIsLogin } = useContext(UserContext);\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();        \r\n        fetch(`${API_URL}/api/auth/logout`, {\r\n            credentials: 'include'\r\n        })\r\n            .then(() => {\r\n                setIsLogin(false);\r\n                NotificationManager.success('Đã đăng xuất!', 'Logout!');  \r\n            })      \r\n    };\r\n\r\n    return (\r\n    <div className={className} onClick={logoutHandler}>\r\n        <i className=\"fas fa-sign-out-alt icon\"></i>\r\n        <span>Đăng xuất</span>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default LogoutButton;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport LogoutButton from './LogoutButton';\r\nimport './SideBar.css';\r\n\r\nconst SideBar = ({ activeSideBar, setActiveSideBar }) => {   \r\n    const { userInfo } = useContext(UserContext);\r\n\r\n    return (\r\n        <div className={activeSideBar?'SideBar SideBar-active':'SideBar'}>\r\n            <div className={activeSideBar?'SideBar-Container SideBar-Container-Active':'SideBar-Container'}>\r\n                <div className=\"header\">\r\n                    <h2 className=\"logo\">Dashboard</h2>\r\n                    <div className=\"close-btn\" onClick={() => setActiveSideBar(false)}>\r\n                        <div className=\"line1\"></div>\r\n                        <div className=\"line2\"></div>\r\n                    </div>\r\n                </div>\r\n                <NavLink to=\"/reports\" activeClassName=\"selected\">\r\n                    <div className=\"sidebar-item\">\r\n                        <span className=\"material-icons icon\">format_list_bulleted</span>\r\n                        <span>Báo cáo</span>\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/statistic\" activeClassName=\"selected\">\r\n                    <div className=\"sidebar-item\">\r\n                        <span className=\"material-icons icon\">bar_chart</span>\r\n                        <span>Thống kê</span>\r\n                    </div>\r\n                </NavLink>\r\n                {userInfo.isAdmin && (<NavLink to=\"/users\" activeClassName=\"selected\">\r\n                    <div className=\"sidebar-item\">\r\n                        <span className=\"material-icons icon\">groups</span>\r\n                        <span>Người dùng</span>\r\n                    </div>\r\n                </NavLink>)}\r\n                <div className=\"logout-btn\">\r\n                    <LogoutButton className=\"sidebar-item\" />\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>       \r\n    )\r\n};\r\n\r\nexport default SideBar;","import React, { useContext } from 'react';\r\nimport { UserContext } from '../contexts/UserContext';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = ({ setActiveSideBar }) => {\r\n    const { userInfo } = useContext(UserContext);\r\n    const clickHandle = () => {\r\n        setActiveSideBar(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"NavBar\">\r\n            <div className=\"hamburger\" onClick={clickHandle}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"user-info\">\r\n                <div className=\"info\">\r\n                    <div>{userInfo.name}</div>\r\n                    <div>{userInfo.isAdmin?'Quản lý':'Người dùng'}</div>\r\n                </div>\r\n                <span class=\"material-icons-outlined icon\">\r\n                    account_circle\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default NavBar;","import React, { useContext, useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport ProtectedRoute from './routes/ProtectedRoute';\r\nimport Home from './routes/Home';\r\nimport Login from './routes/Login';\r\nimport Register from './routes/Register';\r\nimport Reports from './routes/Reports';\r\nimport Users from './routes/Users';\r\nimport Statistic from './routes/Statistic';\r\nimport SideBar from './components/SideBar';\r\nimport { UserContext } from './contexts/UserContext';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\n\r\nfunction App() {\r\n  const { isLogin } = useContext(UserContext);\r\n  const [activeSideBar, setActiveSideBar] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {isLogin && <SideBar activeSideBar={activeSideBar} setActiveSideBar={setActiveSideBar}/>}\r\n        <div className=\"right-side-container\">\r\n          {isLogin && <NavBar setActiveSideBar={setActiveSideBar}/>}\r\n          <Switch>\r\n            <ProtectedRoute exact path=\"/\" component={Home} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <ProtectedRoute exact path=\"/reports\" component={Reports} />\r\n            <ProtectedRoute exact path=\"/users\" component={Users} />\r\n            <ProtectedRoute exact path=\"/statistic\" component={Statistic} />\r\n          </Switch>\r\n        </div>\r\n        <NotificationContainer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { UserProvider } from './contexts/UserContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <App />      \n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}